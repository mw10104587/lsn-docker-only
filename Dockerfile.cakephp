# based off of php 7.1.5 example: https://blog.cloud66.com/deploying-your-cakephp-applications-with-cloud-66/
#start with our base image (the foundation) - version 7.3.3
# latest from https://hub.docker.com/_/php/
# FROM php:7.3.3-apache
FROM php:7.4-apache
#install all the system dependencies
RUN apt-get update && apt-get install -y \
  libicu-dev \
  libpq-dev \
  default-mysql-client \
  ssh \
  git \
  zip \
  unzip \
  # https://github.com/Safran/RoPA/issues/4
  libzip-dev \
  # https://stackoverflow.com/questions/2977662/php-zip-installation-on-linux
  zlib1g-dev \
  && rm -r /var/lib/apt/lists/*
# configure the php modules
RUN docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \
  && docker-php-ext-install \
  intl \
  pcntl \
  pdo_mysql \
  zip \
  opcache \
  sockets
#install composer
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
RUN php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
RUN php composer-setup.php
RUN php -r "unlink('composer-setup.php');"
# Execute the following command to move the composer.phar to a directory that is in your path
RUN mv composer.phar /usr/local/bin/composer
#set our application folder as an environment variable
ENV APP_HOME /var/www/html
#change uid and gid of apache to docker user uid/gid
RUN usermod -u 1000 www-data && groupmod -g 1000 www-data
#change the web_root to cakephp /var/www/html/webroot folder
COPY ./apache2/000-default.conf /etc/apache2/sites-enabled/000-default.conf
RUN mkdir -p /etc/apache2/ssl
COPY ./apache2/cert-key.pem /etc/apache2/ssl/
COPY ./apache2/cert.pem /etc/apache2/ssl/
# RUN sed -i -e "s/html/html\/webroot/g" /etc/apache2/sites-enabled/000-default.conf
RUN sed -i -e "s/<Directory \/var\/www/<Directory \/var\/www\/html\/webroot/" /etc/apache2/apache2.conf
RUN sed -i -e "s/AllowOverride None/AllowOverride All/g" /etc/apache2/apache2.conf

# enable apache module rewrite
RUN a2enmod rewrite
#copy source files and run composer
COPY /lsn/composer.json  $APP_HOME

# Setup HTTPS
# COPY ./ssl.crt /etc/apache2/ssl/ssl.crt
# COPY ./ssl.key /etc/apache2/ssl/ssl.key
RUN mkdir -p /var/run/apache2/
# COPY ./config/000-default.conf /etc/apache2/sites-enabled
# Copy the service account credential into the right folder
COPY ../lsn/credentials.json /var/www/html/webroot/lsn-project-314612-a4b12fcefd67.json
RUN a2enmod ssl
EXPOSE 80
EXPOSE 443

WORKDIR /var/www/html
# Make ssh dir and copy key to the container
# RUN mkdir /root/.ssh/
# COPY ./ssh_key/id_ed25519.pub /root/.ssh/id_ed25519.pub
# Grab source code of lsn from Remote Host (Bitbucket or github)
# Create known_hosts file
# RUN touch /root/.ssh/known_hosts
# Add known host
# RUN ssh-keyscan github.com >> ~/.ssh/known_hosts
# RUN git clone https://github.com/mw10104587/lsn.git


#install all PHP dependencies
RUN composer install --no-interaction --no-plugins --no-scripts
#change ownership of our applications
RUN chown -R www-data:www-data $APP_HOME
RUN chown -R www-data:www-data /var/www/html/webroot

CMD ["apache2-foreground"]
